Multitier App:-
------------------------
Controller:-
-----------------------
using BusinessAccessLayer.Contract;
using Microsoft.AspNetCore.Mvc;
using CommonLayer.Models;

namespace MultiTierApp.Controllers
{
    public class EmployeeController : Controller
    {
        private readonly IEmployee _employee;
        public EmployeeController(IEmployee employee)  //  Dependency Injection (Constructor Injection)
        {
            _employee = employee;
        }
        public IActionResult Index()
        {
            var employees = _employee.getEmployees();
            return View(employees);
        }
        public IActionResult Create()
        {
            return View();
        }

        [HttpPost]
        public IActionResult Create(Employee empObj)
        {
            Employee emp=_employee.CreateEmployee(empObj);
            if(emp!=null)
            {
                TempData["insert"] = "<script>alert('Employee Added SuccessFully!!');</script>";
                return RedirectToAction("Index");
            }
            return View();
        }

        public IActionResult Edit(int id)
        {
            Employee employee=_employee.getSingleEmployee(id);
            return View(employee);
        }

        [HttpPost]
        public IActionResult Edit(Employee empObj)
        {
            Employee emp = _employee.EditEmployee(empObj);
            if (emp != null)
            {
                TempData["update"] = "<script>alert('Employee Updated SuccessFully!!');</script>";
                return RedirectToAction("Index");
            }
            return View();
        }
        public IActionResult Delete(int id)
        {
            bool b = _employee.DeleteEmployee(id);
            if (b == true)
            {
                TempData["delete"] = "<script>alert('Employee Deleted SuccessFully!!');</script>";
                return RedirectToAction("Index");
            }
            return View();

        }
    }
}
----------------------------------------------------
Employee Db Operation:-
-------------------------------------
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CommonLayer.Models;
using Microsoft.Data.SqlClient;

namespace DataAccessLayer
{
    public class EmployeeDbOperation
    {
        public DbConnect dbconnect;
        public EmployeeDbOperation()
        {
            dbconnect = new DbConnect();
        }
        public List<Employee> getEmployees()
        {
            SqlCommand cmd = new SqlCommand("sp_Employee",dbconnect.connection);
            cmd.CommandType = CommandType.StoredProcedure;
            if (dbconnect.connection.State == ConnectionState.Closed)
            {
                dbconnect.connection.Open();
            }
            cmd.Parameters.AddWithValue("@action","Select");
            SqlDataReader dr = cmd.ExecuteReader();
            List<Employee> empList = new List<Employee>();
            while (dr.Read())
            {
                Employee emp = new Employee();
                emp.Eid =(int)dr["eid"];
                emp.Name = dr["ename"].ToString();
                emp.Age =(int)dr["age"];
                emp.Address = dr["eaddress"].ToString();
                emp.MobileNo = dr["mobileno"].ToString();
                emp.Post = dr["post"].ToString();
                emp.Salary =(int)dr["salary"];
                empList.Add(emp);
            }
            dbconnect.connection.Close();
            return empList;
        }
        public Employee CreateEmployee(Employee empObj)
        {
            SqlCommand cmd = new SqlCommand("sp_Employee", dbconnect.connection);
            cmd.CommandType = CommandType.StoredProcedure;
            if (dbconnect.connection.State == ConnectionState.Closed)
            {
                dbconnect.connection.Open();
            }
            cmd.Parameters.AddWithValue("@action", "Create");
            cmd.Parameters.AddWithValue("@name", empObj.Name);
            cmd.Parameters.AddWithValue("@age", empObj.Age);
            cmd.Parameters.AddWithValue("@address", empObj.Address);
            cmd.Parameters.AddWithValue("@mobileno", empObj.MobileNo);
            cmd.Parameters.AddWithValue("@post", empObj.Post);
            cmd.Parameters.AddWithValue("@salary", empObj.Salary);
            int result=(int)cmd.ExecuteScalar();
            dbconnect.connection.Close();
            if (result != 0)
            {
                return empObj;
            }
            else
            {
                return null;
            }
        }
        public Employee getSingleEmployee(int id)
        {
            SqlCommand cmd = new SqlCommand("sp_Employee", dbconnect.connection);
            cmd.CommandType = CommandType.StoredProcedure;
            if (dbconnect.connection.State == ConnectionState.Closed)
            {
                dbconnect.connection.Open();
            }
            cmd.Parameters.AddWithValue("@action", "Select_Single");
            cmd.Parameters.AddWithValue("@eid",id);
            SqlDataReader dr = cmd.ExecuteReader();
            Employee emp = new Employee();
            if (dr.Read())
            {
                emp.Eid =(int)dr["eid"];
                emp.Name = dr["ename"].ToString();
                emp.Age = (int)dr["age"];
                emp.Address = dr["eaddress"].ToString();
                emp.MobileNo = dr["mobileno"].ToString();
                emp.Post = dr["post"].ToString();
                emp.Salary =(int)dr["salary"];
            }
            dbconnect.connection.Close();
            return emp;
        }
        public Employee EditEmployee(Employee empObj)
        {
            SqlCommand cmd = new SqlCommand("sp_Employee", dbconnect.connection);
            cmd.CommandType = CommandType.StoredProcedure;
            if (dbconnect.connection.State == ConnectionState.Closed)
            {
                dbconnect.connection.Open();
            }
            cmd.Parameters.AddWithValue("@action", "Update");
            cmd.Parameters.AddWithValue("@name", empObj.Name);
            cmd.Parameters.AddWithValue("@age", empObj.Age);
            cmd.Parameters.AddWithValue("@address", empObj.Address);
            cmd.Parameters.AddWithValue("@mobileno", empObj.MobileNo);
            cmd.Parameters.AddWithValue("@post", empObj.Post);
            cmd.Parameters.AddWithValue("@salary", empObj.Salary);
            cmd.Parameters.AddWithValue("@eid", empObj.Eid);
            int result = (int)cmd.ExecuteScalar();
            dbconnect.connection.Close();
            if (result != 0)
            {
                return empObj;
            }
            else
            {
                return null;
            }
        }
        public bool DeleteEmployee(int id)
        {
            SqlCommand cmd = new SqlCommand("sp_Employee", dbconnect.connection);
            cmd.CommandType = CommandType.StoredProcedure;
            if (dbconnect.connection.State == ConnectionState.Closed)
            {
                dbconnect.connection.Open();
            }
            cmd.Parameters.AddWithValue("@action", "Delete");
            cmd.Parameters.AddWithValue("@eid",id);
            int result = (int)cmd.ExecuteScalar();
            dbconnect.connection.Close();
            if (result != 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
    }
}
----------------------------------------
Contract:-
------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using CommonLayer.Models;

namespace BusinessAccessLayer.Contract
{
    public interface IEmployee
    {
        List<Employee> getEmployees();
        Employee CreateEmployee(Employee empObj);
        Employee getSingleEmployee(int id);
        Employee EditEmployee(Employee empObj);
        bool DeleteEmployee(int id);
    }
}
-------------------------
Services:-
--------------------
using BusinessAccessLayer.Contract;
using CommonLayer.Models;
using DataAccessLayer;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BusinessAccessLayer.Services
{
    public class EmployeeService : IEmployee
    {
        public EmployeeDbOperation dbOperation;
        public EmployeeService()
        {
            dbOperation = new EmployeeDbOperation();
        }
        public List<Employee> getEmployees()
        {
            return dbOperation.getEmployees();
        }
        public Employee CreateEmployee(Employee empObj)
        {
            return dbOperation.CreateEmployee(empObj);
        }
        public Employee getSingleEmployee(int id)
        {
            return dbOperation.getSingleEmployee(id);
        }

        public Employee EditEmployee(Employee empObj)
        {
            return dbOperation.EditEmployee(empObj);
        }

        public bool DeleteEmployee(int id)
        {
            return dbOperation.DeleteEmployee(id);
        }
    }
}
-----------------------
Stored Procedure:-
--------------------------------
create proc sp_Employee  
(  
@action nvarchar(100),  
@eid int=0,  
@name nvarchar(100)=null,  
@age int=0,  
@address nvarchar(100)=null,  
@mobileno nvarchar(20)=null,  
@post nvarchar(100)=null,  
@salary int=0  
)  
as begin  
if(@action='Select')  
begin  
select * from tbl_Employee  
end  
else if(@action='Select_Single')  
begin  
select * from tbl_Employee where eid=@eid  
end  
else if(@action='Create')  
begin  
insert into tbl_Employee(ename,age,eaddress,mobileno,post,salary)values(@name,@age,@address,@mobileno,@post,@salary)  
select 1 as result  
end  
else if(@action='Update')  
begin  
update tbl_Employee set ename=@name,age=@age,eaddress=@address,mobileno=@mobileno,post=@post,salary=@salary where eid=@eid  
select 1 as result  
end  
else if(@action='Delete')  
begin  
delete from tbl_Employee where eid=@eid  
select 1 as result  
end  
end
-------------------------------------------------------------------------------------------------------------------------------
Index.cshtml:-
--------------------------
@model IEnumerable<CommonLayer.Models.Employee>

<h1 class="bg-dark text-white text-center">LIST OF EMPLOYEE RECORDS</h1>

@Html.Raw(TempData["insert"])
@Html.Raw(TempData["update"])
@Html.Raw(TempData["delete"])

@Html.ActionLink("Add New Employee","Create","Employee",null,new {@class="btn btn-success"})

<table class="table table-bordered mt-3">
    <tr>
        <th>EID</th>
        <th>NAME</th>
        <th>AGE</th>
        <th>ADDRESS</th>
        <th>MOBILENO</th>
        <th>POST</th>
        <th>SALARY</th>
        <th colspan="2" class="text-center">ACTION</th>
    </tr>
    @foreach (var emp in Model)
    {
        <tr>
            <td>@emp.Eid</td>
            <td>@emp.Name</td>
            <td>@emp.Age</td>
            <td>@emp.Address</td>
            <td>@emp.MobileNo</td>
            <td>@emp.Post</td>
            <td>@emp.Salary</td>
            <td align="center"><a asp-action="Edit" asp-controller="Employee" asp-route-id="@emp.Eid" class="btn btn-warning">EDIT</a></td>
            <td align="center"><a asp-action="Delete" asp-controller="Employee" asp-route-id="@emp.Eid" class="btn btn-danger" onclick="return confirm('Are you Sure you want to Delete this Record(Y/N)?');">DELETE</a></td>
        </tr>
    }
</table>
--------------------------------------------------------------
Create.cshtml:-
--------------------------
@model CommonLayer.Models.Employee

<h1 class="bg-dark text-white text-center">Create New Employee </h1>
<div class="container">
    <div class="row">
        <div class="col-6">
            <form asp-controller="Employee" asp-action="Create" method="post">
            <div class="form-group">
                <label>Name</label>
                <input type="text" class="form-control" asp-for="Name" />
            </div>
             <div class="form-group">
                <label>Age</label>
                <input type="text" class="form-control" asp-for="Age" />
            </div>
            <div class="form-group">
                <label>Address</label>
                <input type="text" asp-for="Address" class="form-control" />
            </div>
             <div class="form-group">
                <label>Mobile No</label>
                <input type="text" asp-for="MobileNo" class="form-control" />
            </div>
            <div class="form-group">
                <label>Post</label>
                <input type="text" asp-for="Post" class="form-control" />
            </div>
            <div class="form-group">
                <label>Salary</label>
                <input type="text" asp-for="Salary" class="form-control" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-success mt-3 form-control">Create</button>
            </div>
            </form>
        </div>
    </div>
</div>
-------------------------------------------------------------------------------------------
Edit.cshtml:-
-----------------------------
@model CommonLayer.Models.Employee

<h1 class="bg-dark text-white text-center">Edit Employee </h1>
<div class="container">
    <div class="row">
        <div class="col-6">
            <form asp-controller="Employee" asp-action="Edit" method="post">
                <div class="form-group">
                    <input type="hidden" asp-for="Eid" />
                </div>
                <div class="form-group">
                    <label>Name</label>
                    <input type="text" class="form-control" asp-for="Name" />
                </div>
                <div class="form-group">
                    <label>Age</label>
                    <input type="text" class="form-control" asp-for="Age" />
                </div>
                <div class="form-group">
                    <label>Address</label>
                    <input type="text" asp-for="Address" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Mobile No</label>
                    <input type="text" asp-for="MobileNo" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Post</label>
                    <input type="text" asp-for="Post" class="form-control" />
                </div>
                <div class="form-group">
                    <label>Salary</label>
                    <input type="text" asp-for="Salary" class="form-control" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-warning mt-3 form-control">Edit</button>
                </div>
            </form>
        </div>
    </div>
</div>
---------------------------------------------------------------------------------------------------------------------------
Employee Model:-
------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.ComponentModel.DataAnnotations;

namespace CommonLayer.Models
{
    public class Employee
    {
        [Key]
        public int Eid { get; set; }
        public string ?Name { get; set; }
        public int Age { get; set; }
        public string ?Address { get; set; }
        public string ?MobileNo { get; set; }
        public string ?Post { get; set; }
        public int Salary { get; set; }
    }
}
---------------------------------------------------
DbConnectionConfig:-
---------------------------------
namespace CommonLayer
{
    public class DbConnectionConfig
    {
        public static string ConnectionString { get; set; }
    }
}
-----------------------------------------------------------
DAL:-
-------------
using Microsoft.Data.SqlClient;
using CommonLayer;
namespace DataAccessLayer
{
    public class DbConnect
    {
        public SqlConnection connection;
        public DbConnect()
        {
            connection = new SqlConnection(DbConnectionConfig.ConnectionString);
        }
    }
}
--------------------------------------------------------------------------
Program.cs - Dependency Injection:-
---------------------------------------------------------
using BusinessAccessLayer.Contract;
using BusinessAccessLayer.Services;
using CommonLayer;
var builder = WebApplication.CreateBuilder(args);

// Add services to the container.
builder.Services.AddControllersWithViews().AddRazorRuntimeCompilation();
DbConnectionConfig.ConnectionString = builder.Configuration.GetConnectionString("DefaultConnection");
builder.Services.AddTransient<IEmployee, EmployeeService>();
var app = builder.Build();

// Configure the HTTP request pipeline.
if (!app.Environment.IsDevelopment())
{
    app.UseExceptionHandler("/Home/Error");
    // The default HSTS value is 30 days. You may want to change this for production scenarios, see https://aka.ms/aspnetcore-hsts.
    app.UseHsts();
}
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------








