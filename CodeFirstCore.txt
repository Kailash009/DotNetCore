Assignment Task:-
----------------------------------
Cascading Dropdown in Core. (24 July 2023)
-----------------------------------------------------------------------------
Entity Framework:-
----------------------------------
>> EF is an ORM (Object Relational Mapping) tool.
>> EF is a Tool that directly Map/bind your model classes into your database.
>> In EF no need to write sql Queries.
>> In EF we write LINQ (Language Integrated) Query.
>> LINQ uses Lamdba Expression.
>> Lambda expression is represented by [ => ] .
-------------------------------------------------------------------------------------------------------------
EF has two approaches:-
1. Code First Approach.
2. Database First Approach.
------------------------------------------------------------
1. Code First Approach.
----------------------------------------------
>> In code first approach we write model classes,and after that we perform migration command by which it is automatically generated database and their tables.
------------------------------------------------------------------------------------------------------------------------------
step-1:-
------------------
Install Packages:-
1. Microsoft.EntityFrameworkCore
2. Microsoft.EntityFrameworkCore.SqlServer
3. Microsoft.EntityFrameworkCore.Tools
----------------------------------------------------------------------------
step-2:-
-------------------
using System.ComponentModel.DataAnnotations;
Create Model Class:-
namespace CodeFirstAvinash.Models
{
    public class Employee
    {
         [Key]
        public int Eid { get; set; }
        public string ?Name { get; set; }
        public int Age { get; set; }
        public string ?MobileNo { get; set; }
        public string ?City { get; set; }
        public decimal Salary { get; set; }
    }
}
-----------------------------------------------------------------------------------------
step-3:-
---------------------
Context Class:-
--------------------------
using Microsoft.EntityFrameworkCore;

namespace CodeFirstAvinash.Models
{
    public class DbContextEmployee:DbContext
    {
        public DbContextEmployee(DbContextOptions<DbContextEmployee> options):base(options)
        {
            
        }
        public DbSet<Employee> Employees { get; set; }
    }
}
---------------------------
step-4:- (appsettings.json)
------------------------------------------
Make Connection String-
------------------------------------------
  "ConnectionStrings": {
    "DefaultConnection": "Data Source=MAHADEV\\MSSQLSERVERJOSHI;Initial Catalog=DbAvinash;Integrated Security=True;"
  },
-----------------------------------------------------------------------------------------
step-5:-
---------------
Add this connection string into services:- (Program.cs)
----------------------------------------------------------------------------
// Add services to the container.
builder.Services.AddControllersWithViews();
builder.Services.AddDbContext<DbContextEmployee>(options =>
{
    options.UseSqlServer(builder.Configuration.GetConnectionString("DefaultConnection"));
});
-------------------------------------------------------------------------------------------
step-6:-
-----------------
Write this command in Package Manager Console:-
--------------------------------------------------------------------------------
Run Migration Command:-
---------------------------------------------------------------
1. add-migration 'anyname'  -> This command see all your model classes and generate LINQ Query.
2. update-database -> This command see your LINQ Query and generate database and table in your database.
--------------------------------------------------------------------------------------------------------------------------------------------------------------
using CodeFirstAvinash.Models;
using Microsoft.AspNetCore.Mvc;

namespace CodeFirstAvinash.Controllers
{
    public class EmployeeController : Controller
    {
        private readonly DbContextEmployee _dbEmp;
        public EmployeeController(DbContextEmployee dbEmp)
        {
            _dbEmp = dbEmp;
        }
        public IActionResult Index()
        {
            var employees = _dbEmp.Employees.ToList();
            return View(employees);
        }
    }
}
-------------------------------------------------------------------------------------------------------------

































































