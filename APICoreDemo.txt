Web API:-
------------------------
API:-
-------------
>> API stands for 'Application Programming Interface'.
>> API is a light weight.
>> API is used to communicate cross platform (java,dotnet,php.python).
>> Api use JSON (Java Script Object Notation).
-----------------------------------------------------------------------
{
"id":101,
"name":"joshi":
"city":"noida"
}  -> JSON
-----------------------
dummyjson.com
-----------------------------
{"id":1,
"title":"iPhone 9",
"description":"An apple mobile which is nothing like apple",
"price":549,"discountPercentage":12.96,"rating":4.69,"stock":94,"brand":"Apple","category":"smartphones","thumbnail":"https://i.dummyjson.com/data/products/1/thumbnail.jpg","images":["https://i.dummyjson.com/data/products/1/1.jpg","https://i.dummyjson.com/data/products/1/2.jpg","https://i.dummyjson.com/data/products/1/3.jpg","https://i.dummyjson.com/data/products/1/4.jpg","https://i.dummyjson.com/data/products/1/thumbnail.jpg"]}
--------------------------------------------------------------------------------------------------------------------------------------------
{
  "openapi": "3.0.1",
  "info": {
    "title": "DemoAPICore",
    "version": "1.0"
  },
  "paths": {
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}
-------------------------------------------------------
[{"date":"2023-02-28T13:18:48.7492197+05:30","temperatureC":20,"temperatureF":67,"summary":"Hot"},{"date":"2023-03-01T13:18:48.7513845+05:30","temperatureC":14,"temperatureF":57,"summary":"Sweltering"},{"date":"2023-03-02T13:18:48.7513919+05:30","temperatureC":18,"temperatureF":64,"summary":"Chilly"},{"date":"2023-03-03T13:18:48.7513923+05:30","temperatureC":-7,"temperatureF":20,"summary":"Mild"},{"date":"2023-03-04T13:18:48.7513926+05:30","temperatureC":37,"temperatureF":98,"summary":"Chilly"}]
-------------------------------------------------------------------------------------------------------------------------------------------
[{"eid":101,"name":"Rohit","age":19,"mobileNo":"7686868","city":"Noida","post":"SE","salary":64777},{"eid":102,"name":"Kunal","age":29,"mobileNo":"9086868","city":"Delhi","post":"TL","salary":23777},{"eid":103,"name":"Arun","age":88,"mobileNo":"7686868","city":"Hyderabad","post":"SE","salary":344777},{"eid":104,"name":"Prakash","age":39,"mobileNo":"34686868","city":"Nagpur","post":"Clerk","salary":56777},{"eid":105,"name":"Chadnan","age":9,"mobileNo":"45686868","city":"Chennai","post":"PO","salary":45777}]  --> JSON FORMAT
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
To test an API we have POSTMAN tool.
------------------------------------------------------------------
In api you need to know only three things:-
1. How to Create API.
2. Test your API.
3. How to Consume your API.
------------------------------------------------------------------------------------------
[HttpGet]
        public IEnumerable<Employee> GetEmployees()
        {
            List<Employee> listemp = new List<Employee>() {
                new Employee() { EID = 101, Name = "Rohit", Age = 19, MobileNo = "7686868", City = "Noida", Post = "SE", Salary = 64777 },
                new Employee() { EID = 102, Name = "Kunal", Age = 29, MobileNo = "9086868", City = "Delhi", Post = "TL", Salary = 23777 },
                new Employee (){ EID = 103, Name = "Arun", Age = 88, MobileNo = "7686868", City = "Hyderabad", Post = "SE", Salary = 344777 },
                new Employee() { EID = 104, Name = "Prakash", Age = 39, MobileNo = "34686868", City = "Nagpur", Post = "Clerk", Salary = 56777 },
                new Employee() { EID = 105, Name = "Chadnan", Age = 9, MobileNo = "45686868", City = "Chennai", Post = "PO", Salary = 45777 }
                };
            return listemp;
        }
---------------------------------------------------------------------------------------------------------------
namespace MohitAPICore.Models
{
    public class Employee
    {
        public int EID { get; set; }
        public string ?Name { get; set; }
        public int Age { get; set; }
        public string ?MobileNo { get; set; }
        public string ?City { get; set; }
        public string ?Post { get; set; }
        public int Salary { get; set; }
    }
}









